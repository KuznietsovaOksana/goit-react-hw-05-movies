{"version":3,"file":"static/js/736.b5f1a5ec.chunk.js","mappings":"yRAEaA,EAAOC,EAAAA,GAAAA,GAAH,4HAQJC,EAAOD,EAAAA,GAAAA,GAAH,gGAMJE,EAAMF,EAAAA,GAAAA,IAAH,kFAMHG,EAAOH,EAAAA,GAAAA,EAAH,4C,kBChBF,SAASI,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAS,mCAAG,2FAChBJ,GAAa,GADG,mBAGKK,EAAAA,EAAAA,IAAaJ,GAHlB,OAGRK,EAHQ,OAIdR,GAAQ,OAAIQ,IAJE,gDAMdC,QAAQC,IAAR,MANc,yBAQdR,GAAa,GARC,4EAAH,qDAWfI,GAZC,CAaF,GAAE,CAACH,KAGF,gCACGF,IAAa,SAACU,EAAA,EAAD,IACbZ,EAAKa,OAAS,GACb,SAACpB,EAAD,UACGO,EAAKc,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,cAAeC,EAAS,EAATA,GACnD,OACE,UAACvB,EAAD,YACE,SAACC,EAAD,CACEuB,IACEJ,EAAY,yCAC0BA,GAClC,sDAENK,IAAKH,KAEP,SAACpB,EAAD,UAAOoB,KACP,UAACpB,EAAD,eAAQmB,EAAR,SAVSE,EAad,OAGH,4DAIP,C,+LCvDDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sBAAiC,CACtDG,OAAQ,CACNC,KAAM,KAHqB,uBACvBhB,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qDASjBiB,EAAgB,mCAAG,WAAMC,GAAN,yFACPN,EAAAA,EAAAA,IAAA,gBAA2B,CAChDG,OAAQ,CACNG,MAAOA,EACPF,KAAM,KAJoB,uBACtBhB,EADsB,EACtBA,KADsB,kBAOvBA,GAPuB,2CAAH,sDAUhBmB,EAAY,mCAAG,WAAMV,GAAN,yFACHG,EAAAA,EAAAA,IAAA,gBAAmBH,IADhB,uBAClBT,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZD,EAAY,mCAAG,WAAMU,GAAN,yFACHG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,aADG,uBAClBT,EADkB,EAClBA,KADkB,kBAEnBA,EAAKT,MAFc,2CAAH,sDAKZ6B,EAAe,mCAAG,WAAMX,GAAN,yFACNG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,aADM,uBACrBT,EADqB,EACrBA,KADqB,kBAEtBA,EAAKqB,SAFiB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  justify-content: center;\n  font-size: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 16px;\n  background-size: cover;\n  max-width: 150px;\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n  width: 150px;\n  height: 225px;\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCast } from 'services/api';\nimport { List, Item, Img, Text } from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetchCast = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getMovieCast(movieId);\n        setCast([...data]);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {cast.length > 0 ? (\n        <List>\n          {cast.map(({ profile_path, character, original_name, id }) => {\n            return (\n              <Item key={id}>\n                <Img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : 'https://m.media-amazon.com/images/I/51dCwRZxtLL.jpg'\n                  }\n                  alt={original_name}\n                />\n                <Text>{original_name}</Text>\n                <Text>\"{character}\"</Text>\n              </Item>\n            );\n          })}\n        </List>\n      ) : (\n        <p>Sorry, there is no information</p>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'f785eee6664a474771b5bfb7f34a07af',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieBySearch = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query: query,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["List","styled","Item","Img","Text","Cast","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","fetchCast","getMovieCast","data","console","log","Loader","length","map","profile_path","character","original_name","id","src","alt","axios","api_key","getTrendingMovies","params","page","getMovieBySearch","query","getMovieById","getMovieReviews","results"],"sourceRoot":""}