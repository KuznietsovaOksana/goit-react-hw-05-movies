{"version":3,"file":"static/js/33.5522e49f.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Box = styled.main`\n  padding: 48px 16px;\n  max-width: 1240px;\n  margin: 0 auto;\n`;\n\nexport const ButtonGoBack = styled.button`\n  display: inline-block;\n  padding: 6px 16px;\n  border: none;\n  border-radius: 5px;\n  background-color: #dc1818;\n  color: #000000;\n  cursor: pointer;\n  outline: none;\n  text-transform: uppercase;\n  margin-bottom: 16px;\n\n  :hover,\n  :focus {\n    background-color: #dc1818;\n    color: #ffffff;\n  }\n`;\n\nexport const MovieBox = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 30px;\n  margin-bottom: 32px;\n  @media (min-width: 480px) {\n    grid-template-columns: 200px 1fr;\n  }\n  @media (min-width: 768px) {\n    grid-template-columns: 300px 1fr;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n`;\n\nexport const MovieTitle = styled.h1`\n  margin-bottom: 16px;\n`;\n\nexport const Rating = styled.p`\n  display: inline-block;\n  margin-bottom: 16px;\n  background-color: #dc1818;\n  color: #ffffff;\n  padding: 2px 6px;\n  border-radius: 5px;\n`;\n\nexport const Overview = styled.h2`\n  margin-bottom: 16px;\n`;\n\nexport const OverviewInfo = styled.p`\n  margin-bottom: 16px;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 16px;\n`;\n\nexport const LinkItem = styled(Link)`\n  color: #000000;\n  display: inline-block;\n  margin-bottom: 16px;\n\n  :hover,\n  :focus {\n    color: #dc1818;\n  }\n`;\n\nexport const Error = styled.p`\n  padding: 32px 16px;\n  font-size: 32px;\n  text-align: center;\n  color: #dc1818;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { getMovieById } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  Box,\n  ButtonGoBack,\n  MovieBox,\n  Img,\n  MovieTitle,\n  Rating,\n  Overview,\n  OverviewInfo,\n  Title,\n  LinkItem,\n  Error,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const { poster_path, name, title, overview, genres, vote_average } =\n          await getMovieById(movieId);\n        setMovieDetails({\n          poster_path,\n          name: name || undefined,\n          title: title || undefined,\n          vote_average: vote_average.toFixed(1),\n          overview,\n          genres: genres.map(({ name }) => name + ' '),\n        });\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  const hasError = error.length > 0;\n  const { poster_path, name, title, vote_average, overview, genres } =\n    movieDetails;\n\n  return (\n    <>\n      {hasError ? (\n        <Error>\n          <p>File was not found!</p>\n          <p>Please, try again later!</p>\n        </Error>\n      ) : (\n        <Box>\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              <ButtonGoBack type=\"button\">Go back</ButtonGoBack>\n              <MovieBox>\n                <Img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : 'https://media.istockphoto.com/id/1191001701/photo/popcorn-and-clapperboard.jpg?s=612x612&w=0&k=20&c=iUkFTVuU8k-UCcZDxczTWs6gkRa0nAMihp2Jf_2ASKM='\n                  }\n                  alt={name || title}\n                />\n                <div>\n                  <MovieTitle>{name || title || 'No info'}</MovieTitle>\n                  <Rating>Rating: {vote_average || 'Not found'}</Rating>\n                  <Overview>Overview:</Overview>\n                  <OverviewInfo>{overview || 'Not found'}</OverviewInfo>\n                  <Title>Genres:</Title>\n                  <p>{genres || 'Others'}</p>\n                </div>\n              </MovieBox>\n              <div>\n                <Title>Additional information</Title>\n                <ul>\n                  <li>\n                    <LinkItem to=\"cast\">Cast</LinkItem>\n                  </li>\n                  <li>\n                    <LinkItem to=\"reviews\">Reviews</LinkItem>\n                  </li>\n                </ul>\n              </div>\n              <Outlet />\n            </>\n          )}\n        </Box>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'f785eee6664a474771b5bfb7f34a07af',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieBySearch = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query: query,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["Box","styled","ButtonGoBack","MovieBox","Img","MovieTitle","Rating","Overview","OverviewInfo","Title","LinkItem","Link","Error","MovieDetails","useState","movieDetails","setMovieDetails","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovies","getMovieById","poster_path","name","title","overview","genres","vote_average","undefined","toFixed","map","message","hasError","length","Loader","type","src","alt","to","axios","api_key","getTrendingMovies","params","page","data","getMovieBySearch","query","id","getMovieCast","cast","getMovieReviews","results"],"sourceRoot":""}